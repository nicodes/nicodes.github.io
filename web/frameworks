# My Favorite Frameworks

When starting a project, it's crucial to consider a fundamental question: Should this be a downloadable app (iOS, Android, PWA), or is a purely web-based solution sufficient? This decision significantly impacts your choice of framework and development strategy.

## üåê Web Only (Server-Side)

For web-only projects, the powerful combination of **Astro + Qwik** is my preferred approach.

- **Astro** excels at building fast, content-focused websites with a component-driven approach that seamlessly integrates with various frontend frameworks.
- **Qwik** offers a unique approach to interactivity through resumable execution, ensuring blazing-fast load times by minimizing JavaScript overhead.

### How Qwik Works

**Qwik** employs a unique approach known as "resumability," meaning your app loads instantly with near-zero JavaScript. It serializes the application's state during build time, minimizing client-side processing on initial load. JavaScript loads incrementally, only when necessary upon user interaction, dramatically improving initial load times and responsiveness.

### Astro and Qwik Together

- [Astro + Qwik Integration](https://qwik.dev/docs/integrations/astro/)
- [Astro](https://astro.build/)
- [Qwik](https://qwik.dev/)

Astro and Qwik combine strengths by maintaining minimal JavaScript overhead at page load. Astro generates static HTML and selectively hydrates components through Qwik's resumability. This combination guarantees exceptional SEO and lightning-fast initial page loads, offering optimal performance without compromising interactive capabilities.


## üì≤ Downloadable App (Client-Side)

For projects requiring a downloadable app, my go-to combination is **SolidJS + Capacitor**.

- **SolidJS** is a highly performant frontend framework known for its fine-grained reactivity and intuitive JSX syntax.
- **Capacitor** bridges web applications to native mobile environments, allowing you to create cross-platform apps efficiently.

**Links:**
- [SolidJS](https://www.solidjs.com/)
- [Capacitor](https://capacitorjs.com/)

## üéñÔ∏è Honorable Mention

**Solid Start** deserves recognition as an excellent metaframework for SolidJS. It helps streamline development when creating supplementary websites or resources alongside your SolidJS + Capacitor apps. Solid Start allows you to effortlessly reuse Solid components across platforms, resulting in a consistent and cohesive user experience.

**Link:**
- [Solid Start](https://start.solidjs.com/)
